/* rexx */

x = sharevar('get' 'dsi')

say 'Reporting out the stem that was passed:'
say ' '
do i = 1 to var.0
   say 'stem value' right(i,2) 'is' var.i
   end

say ' '
say left('-',70,'-')
say ' '

Say 'The Listdsi variables are:'
say ' '
  say  'sysdsname           '          sysdsname
  say  'sysadirblk          '         sysadirblk
  say  'sysalloc            '           sysalloc
  say  'sysallocpages       '      sysallocpages
  say  'sysblksize          '         sysblksize
  say  'sysblkstrk          '         sysblkstrk
  say  'syscreate           '          syscreate
  say  'syscreatejob        '       syscreatejob
  say  'syscreatestep       '      syscreatestep
  say  'syscreatetime       '      syscreatetime
  say  'sysdataclass        '     sysdataclass
  say  'sysdsorg            '         sysdsorg
  say  'sysdssms            '         sysdssms
  say  'syseadscb           '        syseadscb
  say  'syseattr            '         syseattr
  say  'sysexdate           '        sysexdate
  say  'sysextents          '     sysextents
  say  'syskeylen           '        syskeylen
  say  'syslrecl            '         syslrecl
  say  'sysmembers          '     sysmembers
  say  'sysmgmtclass        '     sysmgmtclass
  say  'sysmsglvl1          '     sysmsglvl1
  say  'sysmsglvl2          '     sysmsglvl2
  say  'sysnumvols          '     sysnumvols
  say  'syspassword         '      syspassword
  say  'sysprimary          '     sysprimary
  say  'sysracfa            '         sysracfa
  say  'sysreason           '        sysreason
  say  'sysrecfm            '         sysrecfm
  say  'sysrefdate          '     sysrefdate
  say  'sysseconds          '     sysseconds
  say  'sysseqdsntype       '    sysseqdsntype
  say  'sysstorclass        '     sysstorclass
  say  'systrkscyl          '     systrkscyl
  say  'sysudirblk          '     sysudirblk
  say  'sysunit             '          sysunit
  say  'sysunits            '         sysunits
  say  'sysupdated          '     sysupdated
  say  'sysused             '          sysused
  say  'sysusedextents      ' sysusedextents
  say  'sysusedpages        '     sysusedpages
  say  'sysusedpercent      ' sysusedpercent
  say  'sysvolume           '        sysvolume
  say  'sysvolumes          '     sysvolumes

exit

  /* --------------------  rexx procedure  -------------------- *
  | Name:      SHAREVAR                                        |
  |                                                            |
  | Function:  Share REXX variables, including stems, among    |
  |            different REXX routines using an ISPF variable. |
  |                                                            |
  |            All listed variables, including stem variables  |
  |            will be encoded into the ispf variable that     |
  |            is then saved in the ISPF Shared variable Pool  |
  |            with a Put and all variables in the list will   |
  |            be reconstituted on the Get.                    |
  |                                                            |
  |            Only stems with numeric suffixes are supported  |
  |            with stem.0 having the count of stems.          |
  |                                                            |
  | Syntax:    rc = sharevar(action ispfvar list)              |
  |                                                            |
  |            rc = return code                                |
  |                                                            |
  |            Action is:  Put or Get                          |
  |                  Put will create the ispf variable with    |
  |                      the provided list of rexx variables   |
  |                      'encoded' within.                     |
  |                  Get will restore the rexx variables       |
  |                                                            |
  |            ispfvar is the ISPF variable name to use        |
  |                                                            |
  |            list is a list, enclosed in quotes, of REXX     |
  |                    variables to be Put (shared).           |
  |                                                            |
  | Examples:  rc = sharevar('put' 'ispfvar' ,                 |
  |                          'userid var1 var2 stem1. stem2.') |
  |            rc = sharevar('get' 'ispfvar')                  |
  |                                                            |
  | Usage Notes: This code must be copied into each of the     |
  |              REXX execs in which it will be used           |
  |                                                            |
  |              If called and not under ISPEXEC then it       |
  |              will Address ISPExec                          |
  |                                                            |
  |              Each REXX variable will be 'encoded' with an  |
  |              x'01' before each variable or stem value.     |
  |              Each stem value will be encoded on it's own   |
  |              and only numeric stems are supported.         |
  |                                                            |
  |              Sample: | is the x'01'                        |
  |                                                            |
  |              | USERID slbd | stem.0 4 | stem.1 abc ...     |
  |                                                            |
  |              Procedure is not used as it hides all the     |
  |              routines variables which must be exposed.     |
  |              Since we don't know which variables to        |
  |              expose - none are.                            |
  |                                                            |
  | Dependencies: Must be used under ISPF                      |
  |                                                            |
  | Author:    Lionel B. Dyck                                  |
  |                                                            |
  | History:  (most recent on top)                             |
  |            05/31/20 LBD - Refine/cleanup code              |
  |            05/30/20 LBD - Creation                         |
  |                                                            |
  * ---------------------------------------------------------- */
ShareVar:
  arg @svact @svispfv @svlist

  /* ------------------- *
  | Define our defaults |
  * ------------------- */
  @svshrv = ''
  @svx01   = '01'x   /* separator */

  /* --------------------------------------- *
  | Check Addressing and Set ISPEXEC if not |
  * --------------------------------------- */
  @save_address = address()
  if @save_address /= 'ISPEXEC' then
  Address ISPExec

  /* ------------------ *
  | Process the Action |
  * ------------------ */
  Select
    /* -------------------------------------------------------------- *
    | Action: PUT                                                    |
    |                                                                |
    | Captures the requested rexx variables and adds them to an      |
    | ispf variable. For stem variables each stem # will be added    |
    | with it's #. Stems that do not use #'s for the suffix are      |
    | not supported.                                                 |
    |                                                                |
    | Each rexx variable, or stem variable, is separated by a hex 01 |
    | which will be used to parse them on the GET.                   |
    * -------------------------------------------------------------- */
    When @svact = 'PUT' then do
      do @svri = 1 to words(@svlist)
        @sv = word(@svlist,@svri)
        if right(@sv,1) /= '.'
        then  @svshrv = @svshrv''@svx01''@sv value(@sv)
        else do
          @sv = substr(@sv,1,length(@sv)-1)
          @svc = value(@sv'.0')
          @svshrv = @svshrv''@svx01'' @sv'.0' @svc
          do @svi = 1 to @svc
            @svs = value(@sv'.'@svi)
            @svshrv = @svshrv''@svx01'' @sv'.'@svi @svs
          end
        end
      end
      /* set the ispf variable name in @svispfv
      contents to the value of the data in
      @svshrv variable */
      x = value(@svispfv,@svshrv)
      'vput ('@svispfv') shared'
    end
    /* ---------------------------------------------------------- *
    | Action: GET                                                |
    |                                                            |
    | VGET the ISPF variable and parse it out to recreate all of |
    | the REXX variables that were PUT.                          |
    * ---------------------------------------------------------- */
    When @svact = 'GET' then do
      'vget ('@svispfv') shared'
      @vputvar = value(@svispfv)
      do until strip(@vputvar) = ''
        parse value @vputvar with @rxs (@svx01) @vputvar
        if strip(@rxs) = '' then iterate
        parse value @rxs with @rxv @rxs
        x = value(@rxv,@rxs)
      end
      /* ------------------------------ *
      | Free the ispf variable/storage |
      * ------------------------------ */
      'verase ('@svispfv') shared'
    end
    Otherwise do
      if @save_address = 'TSO' then Address TSO
      return 8
    end
  end

  /* ---------------------- *
  | Clean up our variables |
  * ---------------------- */
  drop @vputvar @svact @svispfv @svlist ,
    @sv @rxv @rxs @svs @svi @svri @svc @svx01

  if @save_address = 'TSO' then Address TSO

  return 0
